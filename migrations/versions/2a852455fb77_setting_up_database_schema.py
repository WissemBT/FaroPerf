"""Setting up database schema

Revision ID: 2a852455fb77
Revises: 
Create Date: 2025-03-13 17:35:48.630037

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2a852455fb77'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('servers',
    sa.Column('server_id', sa.UUID(), nullable=False),
    sa.Column('hostname', sa.String(), nullable=False),
    sa.Column('ip_address', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('server_id'),
    sa.UniqueConstraint('ip_address')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('alert_rules',
    sa.Column('rule_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('server_id', sa.UUID(), nullable=False),
    sa.Column('metric', sa.String(), nullable=False),
    sa.Column('condition', sa.String(), nullable=False),
    sa.Column('threshold', sa.Float(), nullable=False),
    sa.Column('duration', sa.String(), nullable=False),
    sa.Column('notification_method', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['server_id'], ['servers.server_id'], ),
    sa.PrimaryKeyConstraint('rule_id')
    )
    op.create_table('metrics',
    sa.Column('metric_id', sa.String(), nullable=False),
    sa.Column('server_id', sa.UUID(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('cpu_usage', sa.Float(), nullable=False),
    sa.Column('memory_usage', sa.Float(), nullable=False),
    sa.Column('disk_usage', sa.Float(), nullable=False),
    sa.Column('network_in', sa.Float(), nullable=False),
    sa.Column('network_out', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['server_id'], ['servers.server_id'], ),
    sa.PrimaryKeyConstraint('metric_id')
    )
    op.create_table('alerts',
    sa.Column('alert_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('server_id', sa.UUID(), nullable=False),
    sa.Column('rule_id', sa.Integer(), nullable=False),
    sa.Column('triggered_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['rule_id'], ['alert_rules.rule_id'], ),
    sa.ForeignKeyConstraint(['server_id'], ['servers.server_id'], ),
    sa.PrimaryKeyConstraint('alert_id')
    )
    op.create_table('notifications',
    sa.Column('notification_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('alert_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('method', sa.String(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['alert_id'], ['alerts.alert_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('notification_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notifications')
    op.drop_table('alerts')
    op.drop_table('metrics')
    op.drop_table('alert_rules')
    op.drop_table('users')
    op.drop_table('servers')
    # ### end Alembic commands ###
